{"version":3,"sources":["Components/Counter.js","Components/FabButton.js","Components/Navbar.js","Components/Repository.js","App.js","Services/expensiveCalculation.js","reportWebVitals.js","index.js"],"names":["HeadCounter","likes","className","FabButton","props","onClick","setTotalLikes","totalLikes","aria-hidden","Navbar","theme","toogleDarkmode","id","style","backgroundColor","htmlFor","type","onChange","Repository","result","href","html_url","target","rel","full_name","stargazers_count","description","Repos","getRepositories","useState","items","setItems","query","setQuery","React","useEffect","then","res","json","data","map","App","dark","setDark","useCallback","fetch","useMemo","likesCounter","index","color","navbar","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7288eaa1.chunk.js","sourcesContent":["export const HeadCounter = ({ likes }) => (\n  <div className=\"bg-gray-400 mt-14 p-2 text-2xl text-center w-full py-1.5\">\n    <h1>Total Likes {likes}</h1>\n  </div>\n);\n","export const FabButton = (props) => (\n  <button\n    onClick={() => props.setTotalLikes(props.totalLikes + 1)}\n    className=\"float-btn tracking-wider text-white bg-gray-500 px-4 py-1 text-sm rounded leading-loose mx-2 font-semibold\"\n  >\n    <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n  </button>\n);\n","import React from \"react\";\n\nexport default function Navbar({ theme, toogleDarkmode }) {\n  return (\n    <nav id=\"header\" className=\"fixed w-full\">\n      <div\n        style={{ backgroundColor: theme }}\n        className=\"relative w-full z-10  top-0 \"\n      >\n        <div className=\"w-full container mx-auto flex flex-wrap items-center justify-between mt-0 py-4\">\n          <div className=\"pl-4 flex items-center\">\n            <h1 className=\"text-teal-700  no-underline hover:no-underline font-extrabold text-xl\">\n              Github Finder\n            </h1>\n          </div>\n\n          <ul className=\"list-reset lg:flex justify-end items-center pr-4\">\n            <label\n              htmlFor=\"toogleA\"\n              className=\"flex items-center cursor-pointer\"\n            >\n              <div className=\"relative\">\n                <input\n                  id=\"toogleA\"\n                  type=\"checkbox\"\n                  onChange={toogleDarkmode}\n                  className=\"hidden\"\n                />\n                <div className=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"></div>\n                <div className=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"></div>\n              </div>\n              <div className=\"ml-3 text-gray-700 font-medium\">Dark Mode</div>\n            </label>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","const Repository = (result) => (\n  <div key={result.id} className=\"repl-list-item rounded p-4\">\n    <div>\n      <a\n        href={result.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"repl-link\"\n      >\n        {result.full_name}\n      </a>\n      {\" - \"}\n      <strong>{result.stargazers_count}</strong>\n    </div>\n    <p>{result.description}</p>\n  </div>\n);\n\nexport { Repository };","import React, { useCallback, useMemo, useState } from \"react\";\nimport { HeadCounter } from \"./Components/Counter\";\nimport { FabButton } from \"./Components/FabButton\";\nimport Navbar from \"./Components/Navbar\";\nimport { Repository } from \"./Components/Repository\";\nimport { likesCounter } from \"./Services/expensiveCalculation\";\n\nconst SEARCH = \"https://api.github.com/search/repositories\";\n\nconst Repos = ({ getRepositories }) => {\n  const [items, setItems] = useState([]);\n  const [query, setQuery] = useState(\"facebook\");\n\n  React.useEffect(() => {\n    getRepositories(query)\n      .then((res) => res.json())\n      .then((data) => setItems((data && data.items) || []));\n  }, [getRepositories, query]);\n\n  return (\n    <div className=\"list\">\n      <button\n        className=\"float-btn-rocket\"\n        onClick={() => setQuery(\"rocketseat\")}\n      >\n        opa\n      </button>\n      {items &&\n        items.map((result) => <Repository key={result.id} {...result} />)}\n    </div>\n  );\n};\n\nfunction App() {\n  const [totalLikes, setTotalLikes] = useState(0);\n  const [dark, setDark] = useState(false);\n\n  const getRepositories = useCallback((query) => fetch(`${SEARCH}?q=${query}`), []);\n\n  const likes = useMemo(() => likesCounter(totalLikes), [totalLikes]);\n\n  const theme = React.useMemo(\n    () => ({\n      color: dark ? \"#fff\" : \"#333\",\n      navbar: dark ? \"#1a202c\" : \"#e5e7eb\",\n      backgroundColor: dark ? \"#333\" : \"#fff\",\n    }),\n    [dark]\n  );\n\n  const toogleDarkmode = () => {\n    console.log(\"toogle\");\n    return setDark(!dark);\n  };\n\n  React.useEffect(() => console.log(\"Dark theme changed\"), [theme]);\n\n  return (\n    <div style={theme} className=\"App\">\n      <Navbar theme={theme.navbar} toogleDarkmode={toogleDarkmode} />\n      <HeadCounter likes={likes} />\n      <Repos getRepositories={getRepositories} />\n      <FabButton totalLikes={totalLikes} setTotalLikes={setTotalLikes} />\n    </div>\n  );\n}\n\nexport default App;\n","/*\n  Exemplo de uma operação computacional pesada\n  esse metodo pode travar sua UI\n*/\nexport const likesCounter = (likesCounter) => {\n  for (let index = 0; index < 1000000000; index++) {}\n  return likesCounter + 1;\n};\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}